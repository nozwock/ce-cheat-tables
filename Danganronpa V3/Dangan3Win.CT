<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>780</ID>
      <Description>"Base Address [Monocoins]"</Description>
      <Options moManualExpandCollapse="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <ShowAsSigned>0</ShowAsSigned>
      <GroupHeader>1</GroupHeader>
      <Address>Dangan3Win.exe+D20080</Address>
      <Offsets>
        <Offset>2636</Offset>
      </Offsets>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Monocoins"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>+0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Skill Fragments"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>2 Bytes</VariableType>
          <Address>-218</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Casino Coins"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>+88AA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"S-Tickets"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>+8986</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"U-Tickets"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>+898A</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Player Level"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Lv 1-5 = 500 Exp | Lv 6-? = 1000 Exp"</Description>
              <Color>CC0000</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Total Experience"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>-226</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Visual Level"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>-22A</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Reflected Level / Skill Slots"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>-21A</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Handbook Theme"</Description>
          <Options moRecursiveSetValue="1" moAlwaysHideChildren="1" moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Selected Theme Index"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+88E</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>313</ID>
          <Description>"Class Trial"</Description>
          <Options moAlwaysHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>310</ID>
              <Description>"Influence"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>-220</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>309</ID>
              <Description>"Influence Max"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>-222</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>312</ID>
              <Description>"Focus"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>-21C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>311</ID>
              <Description>"Focus Max"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>-21E</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>100</ID>
      <Description>"[Table Internal Data]"</Description>
      <Options moAlwaysHideChildren="1" moManualExpandCollapse="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>101</ID>
          <Description>"list/0 Unlocked 1 Locked"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Unlocked
1:Locked
</DropDownList>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"list/1 Unlocked 0 Locked"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Unlocked
0:Locked
</DropDownList>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>
    <LuaScriptEntry><![CDATA[---@param record_description string
---@param value string
---@param set_all? boolean
---@param custom_check? fun(memrec: userdata): boolean
function set_child_values(record_description, value, set_all, custom_check)
	local record = AddressList.getMemoryRecordByDescription(record_description)
	assert(record, string.format("Record with description '%s' is not found.", record_description))

	for i = 0, record.Count - 1 do
		local child = record.Child[i]

		local custom_check_result = true
		if custom_check then
			custom_check_result = custom_check(child)
		end

		if not child.IsGroupHeader and (set_all or tonumber(child.Value) > 0) and custom_check_result then
			child.Value = value
		end
	end
end

---@param value string
function set_gifts_quantity(value)
	set_child_values("Gifts Quantity", value, false, function(memrec)
		local id, _ = string.gsub(memrec.Description, "NO%.", "")
		return tonumber(id) < 114
	end)
end

-- set_gifts_quantity("25")
]]></LuaScriptEntry>
    <LuaScriptEntry><![CDATA[function onOpenProcess()
	-- Symbol doesn't exist when running the game under wine/proton on linux
	if not getAddressSafe("Dangan3Win.exe") then
		local scanlist = AOBScan("50 45 00 00 64 86 07 00 BD AA DC 59 00 00 00 00")
		assert(scanlist, "Couldn't find the unique instruction sequence for Dangan3Win.exe")
		registerSymbol("Dangan3Win.exe", string.format("%X", tonumber(scanlist[0], 16) - 0x128), true)
	end
end
]]></LuaScriptEntry>
    <LuaScriptEntry><![CDATA[local header_default_options = {
	"moActivateChildrenAsWell",
	"moDeactivateChildrenAsWell",
	"moRecursiveSetValue",
	"moAllowManualCollapseAndExpand",
	"moManualExpandCollapse",
}

---@param group_caption string
---@return userdata
local function get_or_create_header_group(group_caption)
	local _memrec = AddressList.getMemoryRecordByDescription(group_caption)
	if _memrec ~= nil then
		return _memrec
	end

	local group_memrec = AddressList.createMemoryRecord()
	group_memrec.IsGroupHeader = true
	group_memrec.DontSave = true
	group_memrec.Description = group_caption
	group_memrec.Options = table.concat(header_default_options, ",")
	group_memrec.Collapsed = true

	return group_memrec
end

---@alias VarType "vtByte" | "vtWord" | "vtDword" | "vtQword" | "vtSingle" | "vtDouble" | "vtString" | "vtByteArray" | "vtGrouped" | "vtBinary" | "vtAll" | "vtAutoAssembler"

--- `i` starts from 1.
---@param base_address string
---@param group_caption string
---@param item_count integer
---@param vartype VarType
---@param vartype_size integer
---@param get_item_caption? fun(i: integer): string
---@return userdata
local function generate_homogeneous_list_group(
	base_address,
	group_caption,
	item_count,
	vartype,
	vartype_size,
	get_item_caption
)
	local _memrec = AddressList.getMemoryRecordByDescription(group_caption)
	if _memrec ~= nil then
		return _memrec
	end

	local group_memrec = AddressList.createMemoryRecord()
	group_memrec.IsAddressGroupHeader = true
	group_memrec.DontSave = true
	group_memrec.Description = group_caption
	group_memrec.Address = base_address
	group_memrec.Options = table.concat(header_default_options, ",")

	for i = 0, item_count - 1 do
		local offset = i * vartype_size
		local gift_memrec = AddressList.createMemoryRecord()
		gift_memrec.DontSave = true
		if get_item_caption then
			gift_memrec.Description = get_item_caption(i + 1)
		else
			gift_memrec.Description = string.format("%02.0f", i + 1)
		end
		gift_memrec.VarType = vartype
		gift_memrec.Address = "+" .. string.format("%X", offset)
		gift_memrec.appendToEntry(group_memrec)
	end

	group_memrec.Collapsed = true

	return group_memrec
end

--- `i` starts from 1.
---@param base_address string
---@param group_caption string
---@param bit_length integer
---@param dropdown_link? string
---@param get_item_caption? fun(i: integer): string
---@return userdata
local function generate_bitmask_list_group(base_address, group_caption, bit_length, dropdown_link, get_item_caption)
	local _memrec = AddressList.getMemoryRecordByDescription(group_caption)
	if _memrec ~= nil then
		return _memrec
	end

	local group_memrec = AddressList.createMemoryRecord()
	group_memrec.IsAddressGroupHeader = true
	group_memrec.DontSave = true
	group_memrec.Description = group_caption
	group_memrec.Address = base_address
	group_memrec.Options = table.concat(header_default_options, ",")

	for i = 0, bit_length - 1 do
		local gift_memrec = AddressList.createMemoryRecord()
		gift_memrec.DontSave = true
		if get_item_caption then
			gift_memrec.Description = get_item_caption(i + 1)
		else
			gift_memrec.Description = string.format("%02.0f", i + 1)
		end
		gift_memrec.VarType = "vtBinary"
		gift_memrec.Binary.Startbit = i % 8
		gift_memrec.Binary.Size = 1
		gift_memrec.Address = "+" .. string.format("%X", i // 8)
		if dropdown_link then
			gift_memrec.DropDownLinked = true
			gift_memrec.DropDownLinkedMemRec = dropdown_link
		end
		gift_memrec.appendToEntry(group_memrec)
	end

	group_memrec.Collapsed = true

	return group_memrec
end

---@param is_script_active boolean
local function generate_gift_unlock_on_nonzero_quantity_script(is_script_active)
	local memrec_caption = "Automatically Unlock Gift On Nonzero Quantity"
	local memrec = AddressList.getMemoryRecordByDescription(memrec_caption)
	if memrec ~= nil then
		return
	end

	memrec = AddressList.createMemoryRecord()
	memrec.DontSave = true
	memrec.Description = memrec_caption
	memrec.VarType = "vtAutoAssembler"
	memrec.Script = [[{$lua}
[ENABLE]
_enable_gift_unlock_on_nonzero_quantity()
[DISABLE]
_disable_gift_unlock_on_nonzero_quantity()
]]

	memrec.appendToEntry(get_or_create_header_group("Gifts"))
	memrec.Active = is_script_active
end

---@param group_description string
---@return table<string, userdata>
local function get_description_record_mapping_of_group(group_description)
	local mapping = {}

	local memrec = AddressList.getMemoryRecordByDescription(group_description)
	if not memrec then
		return mapping
	end

	for i = 0, memrec.Count - 1 do
		local child = memrec.Child[i]
		mapping[child.Description] = child
	end

	return mapping
end

local gift_unlock_record_mapping
function _enable_gift_unlock_on_nonzero_quantity()
	local quantity_memrec = AddressList.getMemoryRecordByDescription("Gifts Quantity")
	assert(quantity_memrec)

	for i = 0, quantity_memrec.Count - 1 do
		local child = quantity_memrec.Child[i]
		child.OnValueChangedByUser = function(memrec, prev, curr)
			local mapped_memrec = gift_unlock_record_mapping[memrec.Description]
			if curr ~= "0" and mapped_memrec and mapped_memrec.Value == "1" then
				mapped_memrec.Value = "0" -- Unlocked
			end
		end
	end
end

function _disable_gift_unlock_on_nonzero_quantity()
	local quantity_memrec = AddressList.getMemoryRecordByDescription("Gifts Quantity")
	assert(quantity_memrec)

	for i = 0, quantity_memrec.Count - 1 do
		local child = quantity_memrec.Child[i]
		child.OnValueChangedByUser = nil
	end
end

local monocoins_static_base_address_group = AddressList.getMemoryRecordByDescription("Base Address [Monocoins]")
assert(monocoins_static_base_address_group)

local GIFTS_COUNT = 143
local gifts_root_group = get_or_create_header_group("Gifts")
gifts_root_group.appendToEntry(monocoins_static_base_address_group)
generate_homogeneous_list_group("+536", "Gifts Quantity", GIFTS_COUNT, "vtWord", 2, function(i)
	return string.format("NO.%03.0f", i)
end).appendToEntry(gifts_root_group)
generate_bitmask_list_group("+736", "Gifts Unlocked", GIFTS_COUNT, "list/0 Unlocked 1 Locked", function(i)
	return string.format("NO.%03.0f", i)
end).appendToEntry(gifts_root_group)
generate_gift_unlock_on_nonzero_quantity_script(true)
gifts_root_group.Collapsed = true

gift_unlock_record_mapping = get_description_record_mapping_of_group("Gifts Unlocked")

local friends_list = {
	"Shuichi Saihara",
	"Kaito Momota",
	"Ryoma Hoshi",
	"Rantaro Amami",
	"Gonta Gokuhara",
	"Kokichi Oma",
	"Korekiyo Shinguji",
	"K1-B0",
	"Kirumi Tojo",
	"Himiko Yumeno",
	"Maki Harukawa",
	"Tenko Chabashira",
	"Tsumugi Shirogane",
	"Angie Yonaga",
	"Miu Iruma",
}
local friendship_fragments_root_group = get_or_create_header_group("Friendship Fragments")
friendship_fragments_root_group.appendToEntry(monocoins_static_base_address_group)
generate_homogeneous_list_group("+79E", "Friendship Fragments from Kaede POV", #friends_list, "vtWord", 2, function(i)
	return friends_list[i]
end).appendToEntry(friendship_fragments_root_group)
generate_homogeneous_list_group("+7DE", "Friendship Fragments from Shuichi POV", #friends_list, "vtWord", 2, function(i)
	return friends_list[i]
end).appendToEntry(friendship_fragments_root_group)
friendship_fragments_root_group.Collapsed = true

local HANDBOOK_THEME_COUNT = 38
local handbook_theme_root_group = get_or_create_header_group("Handbook Theme")
handbook_theme_root_group.appendToEntry(monocoins_static_base_address_group)
generate_bitmask_list_group("+776", "Handbook Theme Unlocked", HANDBOOK_THEME_COUNT, "list/1 Unlocked 0 Locked").appendToEntry(
	handbook_theme_root_group
)
generate_bitmask_list_group("+786", "Handbook Theme Discovered", HANDBOOK_THEME_COUNT).appendToEntry(
	handbook_theme_root_group
)
handbook_theme_root_group.Collapsed = true

local HIDDEN_MONOKUMA_COUNT = 30
generate_bitmask_list_group("+886", "Hidden Monokumas Unlocked", HIDDEN_MONOKUMA_COUNT).appendToEntry(
	monocoins_static_base_address_group
)
]]></LuaScriptEntry>
  </LuaScript>
  <Comments><![CDATA[Partially derived record addresses from https://fearlessrevolution.com/viewtopic.php?p=222782#p222782]]></Comments>
</CheatTable>
